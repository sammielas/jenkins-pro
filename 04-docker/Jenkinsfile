pipeline {
    agent any

    environment {
        IMAGE_NAME = 'sammielas/jenkins-flask-app'
        IMAGE_TAG = "${IMAGE_NAME}:${env.GIT_COMMIT}"
        
    }

    
    stages {

stage('Install Python 3 and Pip') {
            steps {
                sh '''
                    # Check if Python 3 is already installed
                    if ! command -v python3 &> /dev/null; then
                        echo "Python 3 is not installed. Installing..."
                        # Install Python 3 and pip based on the OS
                        if command -v apt-get &> /dev/null; then
                            # For Debian/Ubuntu-based systems
                            apt-get update
                            apt-get install -y python3 python3-pip
                        elif command -v yum &> /dev/null; then
                            # For Red Hat/CentOS-based systems
                            yum install -y python3 python3-pip
                        elif command -v apk &> /dev/null; then
                            # For Alpine-based systems
                            apk add python3 py3-pip
                        else
                            echo "Unsupported package manager. Cannot install Python 3."
                            exit 1
                        fi
                    else
                        echo "Python 3 is already installed."
                    fi

                    # Verify Python 3 and pip installation
                    python3 --version
                    pip --version
                '''
            }
        }

        stage('Setup') {
            steps {
                sh "pip install -r requirements.txt"
            }
        }
        stage('Test') {
            steps {
                sh "pytest"
            }
        }

        stage('Login to docker hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-creds', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                sh 'echo ${PASSWORD} | docker login -u ${USERNAME} --password-stdin'}
                echo 'Login successfully'
            }
        }

        stage('Build Docker Image')
        {
            steps
            {
                sh 'docker build -t ${IMAGE_TAG} .'
                echo "Docker image build successfully"
                sh 'docker image ls'
                
            }
        }

        stage('Push Docker Image')
        {
            steps
            {
                sh 'docker push ${IMAGE_TAG}'
                echo "Docker image push successfully"
            }
        }      
    }
}